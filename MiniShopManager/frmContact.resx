<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>